#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = SLR
#RegularDefinitions
L  : [A-Za-z]
D  : [0-9]
WS : [\ \t\n\r]
COMMENT : '//' [^\n\r]* [\n\r]
#Tokens
"+"
"-"
"*"
"/"

"=="
"!="
">"
">="
"<"
"<="
"!"

"="

"("
")"
"{"
"}"
";"
","

id: {L} ({L} | {D} | _ )*

function = id : "function"
var = id : "var"
if = id : "if"
else = id : "else"
for = id : "for"
while = id : "while"
read = id : "read"
write = id : "write"
return = id : "return"

num : {D}+ ("." {D}+)?

: {WS}*
: {COMMENT}
#NonTerminals
<PROGRAMA>
<LISTA_DECLARACOES>
<DECLARACAO>
<DECL_FUNCAO>
<LISTA_PARAM>
<PARAM>
<DECL_VARIAVEL>
<BLOCO>
<LISTA_COMANDOS>
<COMANDO>
<COMANDO_ATRIBUICAO>
<COMANDO_LEITURA>
<COMANDO_ESCRITA>
<COMANDO_IF>
<COMANDO_FOR>
<COMANDO_WHILE>
<COMANDO_RETURN>
<CHAMADA_FUNCAO>
<LISTA_ARGS>
<EXPRESSAO>
<EXPR_LOGICA>
<EXPR_RELACIONAL>
<EXPR_ARITMETICA>
<TERMO>
<FATOR>
#Grammar
<PROGRAMA> ::= <LISTA_DECLARACOES> ;

<LISTA_DECLARACOES> ::= <DECLARACAO> <LISTA_DECLARACOES>
                      | î ;

<DECLARACAO> ::= <DECL_FUNCAO>
               | <DECL_VARIAVEL> ;

<DECL_FUNCAO> ::= function id "(" <LISTA_PARAM> ")" <BLOCO> ;

<LISTA_PARAM> ::= <PARAM>
                | <PARAM> "," <LISTA_PARAM>
                | î ;

<PARAM> ::= id ;

<DECL_VARIAVEL> ::= var id ";" ;

<BLOCO> ::= "{" <LISTA_COMANDOS> "}" ;

<LISTA_COMANDOS> ::= <COMANDO> <LISTA_COMANDOS>
                   | î ;

<COMANDO> ::= <COMANDO_ATRIBUICAO>
            | <COMANDO_LEITURA>
            | <COMANDO_ESCRITA>
            | <COMANDO_IF>
            | <COMANDO_FOR>
            | <COMANDO_WHILE>
            | <COMANDO_RETURN>
            | <CHAMADA_FUNCAO> ";" ;

<COMANDO_ATRIBUICAO> ::= id "=" <EXPRESSAO> ";" ;

<COMANDO_LEITURA> ::= read "(" id ")" ";" ;

<COMANDO_ESCRITA> ::= write "(" <EXPRESSAO> ")" ";" ;

<COMANDO_IF> ::= if "(" <EXPRESSAO> ")" <BLOCO>
               | if "(" <EXPRESSAO> ")" <BLOCO> else <BLOCO> ;

<COMANDO_FOR> ::= for "(" <COMANDO_ATRIBUICAO> <EXPRESSAO> ";" <COMANDO_ATRIBUICAO> ")" <BLOCO> ;

<COMANDO_WHILE> ::= while "(" <EXPRESSAO> ")" <BLOCO> ;

<COMANDO_RETURN> ::= return <EXPRESSAO> ";"
                   | return ";" ;

<CHAMADA_FUNCAO> ::= id "(" <LISTA_ARGS> ")" ;

<LISTA_ARGS> ::= <EXPRESSAO>
               | <EXPRESSAO> "," <LISTA_ARGS>
               | î ;

<EXPRESSAO> ::= <EXPR_LOGICA> ;

<EXPR_LOGICA> ::= <EXPR_RELACIONAL>
                | "!" <EXPR_RELACIONAL>
                | <EXPR_RELACIONAL> "==" <EXPR_RELACIONAL>
                | <EXPR_RELACIONAL> "!=" <EXPR_RELACIONAL> ;

<EXPR_RELACIONAL> ::= <EXPR_ARITMETICA>
                    | <EXPR_ARITMETICA> ">" <EXPR_ARITMETICA>
                    | <EXPR_ARITMETICA> ">=" <EXPR_ARITMETICA>
                    | <EXPR_ARITMETICA> "<" <EXPR_ARITMETICA>
                    | <EXPR_ARITMETICA> "<=" <EXPR_ARITMETICA> ;

<EXPR_ARITMETICA> ::= <TERMO>
                    | <EXPR_ARITMETICA> "+" <TERMO>
                    | <EXPR_ARITMETICA> "-" <TERMO> ;

<TERMO> ::= <FATOR>
          | <TERMO> "*" <FATOR>
          | <TERMO> "/" <FATOR> ;

<FATOR> ::= id
          | num
          | <CHAMADA_FUNCAO>
          | "(" <EXPRESSAO> ")" ;
